{
  "openapi": "3.0.3",
  "version": "1.0.0",
  "info": {
    "title": "Auth-User-API",
    "description": "Authentication user API",
    "contact": {
      "name": "Paulo Dantas",
      "url": "https://github.com/paulodantas-dev",
      "email": "paulodantasbjr@gmail.com"
    },
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://auth-app-node.herokuapp.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "summary": "Login User",
        "description": "Returns token and sets cookie for user with refresh token",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "johndoe@email.com",
                    "password": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "login response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ResponseLogin"
                }
              }
            }
          },
          "400": {
            "description": "This email does not exist."
          },
          "401": {
            "description": "Password is incorrect."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "summary": "Register User",
        "description": "sending a confirmation email to the user email",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              },
              "examples": {
                "register": {
                  "value": {
                    "name": "john doe",
                    "email": "johndoe@email.com",
                    "password": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "register response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ResponseRegister"
                }
              }
            }
          },
          "401": {
            "description": "Password must be at least 8 characters."
          },
          "403": {
            "description": "This email already exists."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/activate": {
      "post": {
        "summary": "Activate User",
        "description": "save user in database",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateRegister"
              },
              "examples": {
                "register": {
                  "value": {
                    "activation_token": "token exemplo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "activate response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ResponseActivate"
                }
              }
            }
          },
          "400": {
            "description": "This email already exists."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "sending a change password to the user email",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPassword"
              },
              "examples": {
                "register": {
                  "value": {
                    "email": "johndoe@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "forgot password response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ResponseForgotPassword"
                }
              }
            }
          },
          "400": {
            "description": "This email does not exist."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/reset-password": {
      "post": {
        "summary": "Reset Password",
        "description": "change password",
        "tags": ["auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              },
              "examples": {
                "register": {
                  "value": {
                    "password": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reset password response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ResponseResetPassword"
                }
              }
            }
          },
          "400": {
            "description": "This email does not exist."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/refresh_token": {
      "post": {
        "summary": "Refresh Token",
        "description": "Returns token based on refresh token",
        "tags": ["auth"],
        "responses": {
          "200": {
            "description": "refresh_token response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Please login now."
          },
          "401": {
            "description": "Token invalid."
          },
          "404": {
            "description": "User does not exist.."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "summary": "Logout User",
        "description": "Returns message of logout and clear cookie",
        "tags": ["auth"],
        "responses": {
          "200": {
            "description": "logout response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/upload-avatar": {
      "post": {
        "summary": "Upload Avatar",
        "description": "upload avatar",
        "tags": ["image"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "image/png": {
              "schema": {
                "$ref": "#/components/schemas/UploadAvatar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload avatar response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UploadAvatarResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get One User",
        "description": "Get your user",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get your user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/user/all": {
      "get": {
        "summary": "Get all Users",
        "description": "Get all users",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/GetAllUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Users not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/user/update": {
      "patch": {
        "summary": "Update your User",
        "description": "Update your users",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "examples": {
                "register": {
                  "value": {
                    "name": "john doe",
                    "avatar": "url .png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update your user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/user/update-role/{id}": {
      "patch": {
        "summary": "Update Role",
        "description": "Update role of user",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRole"
              },
              "examples": {
                "register": {
                  "value": {
                    "role": "1/0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update role of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/user/delete/{id}": {
      "delete": {
        "summary": "Delete User",
        "description": "Delete user",
        "tags": ["user"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["email", "password"]
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["password"]
      },
      "ForgotPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["email"]
      },
      "UploadAvatar": {
        "type": "string",
        "format": "binary"
      },
      "UpdateRole": {
        "type": "object",
        "properties": {
          "role": {
            "type": "integer",
            "enum": [1, 0]
          }
        },
        "required": ["role"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["email", "password", "name"]
      },
      "ActivateRegister": {
        "type": "object",
        "properties": {
          "activation_token": {
            "type": "string"
          }
        },
        "required": ["activation_token"]
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "avatar": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "GetAllUserResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserResponse"
            }
          }
        }
      },
      "UploadAvatarResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": ["message", "avatar"]
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      },
      "ResponseLogin": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      },
      "ResponseResetPassword": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "ResponseActivate": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "ResponseForgotPassword": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "ResponseRegister": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
